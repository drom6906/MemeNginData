memeNgin:
  about: MemeNgin основанный на узлах движок для изображений, разработанный для создателей мемов.
  detail: В MemeNgin, вы можете сконструировать машину для создания мемов, соответствующую вашим потребностям, построив логические схемы, такие как форма, цвет, текст и композитинг, а не просто добавляя текст к изображениям. Созданная таким образом машина становится шаблоном, который позволяет создавать новые мемы с минимальными усилиями. Итеративный процесс изменения изображений также можно запрограммировать с помощью логических узлов и использовать в продуктивных целях.
  
  full_version_title: Если ты купил MemeNgin,
  full_version:
    - Вы можете активно участвовать в сообществе MemeNgin на основе steamworks.
    - Вы можете использовать мастерскую Steam что-бы делиться работами с остальными и черпать вдохновение у других (Работа в прогрессии )
    - Вы можете помочь мне завершить этот проект.

  links:
    discord: Дискорд сервер
    roadmap: Страница Trello
    subreddit: Sub-reddit
    source_code: Github
    translate: Мне нужна помощь в переводе на ваши языки, включая Английский. Вы можете посмотреть детали на странице GitHub.

  text_open_source: MemeNgin это проект с открытым исходным кодом. Мы стараемся определять направление проекта, максимально учитывая мнение сообщества. План проекта MemeNgin может быть найден на странице Trello .

ui_general:
  okay: Ок
  agree: Согласен
  disagree: Не согласен
  cancel: Отмена
  close: Закрыть
  save: Сохранить
  do_not_save: Не сохранять
  update: Обновить
  publish: Опубликовать
  steam_must_run: Клиент steam должен быть запущен!!!
  create: Создать
  subscribe: Подписаться
  unsubscribe: Подписан
  success: Успех
  fail: Провал
  language: Язык

experimental:  Экспериментальные узлы в настоящее время являются незавершенными, но показывают узлы, которые могут быть приняты в будущем. Обратите внимание, что в будущем они могут быть улучшены, изменены или даже удалены.

close_dialog:
  title: MemeNgin
  message: Ты хочешь сохранить сохранить изменения?

language_dialog:
  save_before: Пожалуйста, сохрание вашу работу до того как вы начнёте.
  help_translate: Языки или меню которое не было переведено будет отоброжаться на Английском. Помогите мне перевести на ваш язык, включая английский!
  go_help: перейти для помощи с переводом.

publish_dialog:
  title: Опубликовать вашу работу в мастерскую steam
  title_item: Заголовок
  description: Описание
  age_rating: Возрастная категория
  tags: Тэги
  derivative: Разрешить другим создавать производные работы на основе этой публикации
  agree_terms: Я согласен с правилами и условиями*
  thumbnail: Иллюстрация
  find_on_steam: Найти это в steam
  required: '* indicates required field'
  success: Проект успешно опубликован. Может потребоваться некоторое время, чтобы он был опубликован в Steam.
  fail: Не удалось опубликовать проект. Пожалуйста, повторите попытку позже. Если ошибка повторяется, пожалуйста, свяжитесь с разработчиком.

age_dialog:
  title: О возрастной категории
  message: Многие молодые пользователи в основном используют мемы, поэтому нам нужно быть особенно осторожными при выпуске материалов сексуального или жестокого содержания. Используйте приведенную ниже таблицу, чтобы определить, в какой возрастной категории находится ваш мем. В случае сомнений рекомендуется выбрать более высокую возрастную категорию. Контент, оцененный ниже фактического рейтинга, может быть исключен из мастерской.
  everyone: Все (0-12)
  everyone_desc: > 
    Без сексуальной экспозиции, без насилия
  questionable: Вопросный (13-17)
  questionable_desc: "Это может быть оценка "Все", но если у вас есть сомнения."
  mature: Зрелые (18-)
  mature_desc: "Легкая нагота, легкое насилие"
  ban: Бан
  ban_desc: "Фотореалистичная нагота, Сексуальные акты, Расчленёнка"

legal_dialog:
  title: Условия соглашения
  steam_tos:
    title: Правила пользования сервисом Steam
    must_not: "Ваша публикация не должна нарушать:"
    subscriber_agreement: Соглашение с подписчиками Steam
    online_conduct: Поведение в сети Steam
    rules: Правила и рекомендации для обсуждений, обзоров и пользовательского контента в Steam
    artwork: Руководство по художественному оформлению в мастерской Steam
  mmng_tos:
    title: Условия предоставления услуг MEMENGIN и руководство по пользовательскому контенту
    must_not: "Ваша публикация не должна содержать:"
    harmful: · вредоносные ссылки или сообщения. Даже если оно встроено в QR-код.
    offensive: · оскорбительное содержание. (например, расизм, жестокость).
    pornographic: · порнографическое содержание. (например, порнографические рисунки/наклейки, обнаженная натура)
    must_owner: Вы должны быть владельцем загруженного материала.
    stolen: · Украденные работы (даже отредактированные) не допускаются.
  agree_legal: "Вы должны согласиться с юридическим соглашением мастерской Steam чтобы продолжить. (нажмите сюда)"

new_document_dialog:
  title: Создать новые мемы
  message: Пожалуйста, назовите ваш проект.

introductions:
  intro: Здравствуйте! Благодарим вас за использование MemeNgin. MemeNgin - это основанный на узлах движок изображений, в котором можно настроить каждый шаг для изменения изображения, что делает его эффективным для создания мемов или шаблонов дизайна.
  nodes: Ваш проект состоит из узлов Input и узла Output, причем узлы и соединения представляют собой взаимосвязи между ними, где узлы - это базовые элементы, выполняющие фиксированные операции, такие как изменение изображения, значений и логики.
  inputs: Inputs - это место для сбора значений, ​​которые оказывают важное влияние на ваш проект. Вы можете использовать текст, целые числа, вещественные числа, цвета и многое другое.
  output: Узел Output - это конечный результат проекта, и вы можете сохранить результат в виде изображения, нажав кнопку Сохранить как изображение в правом верхнем углу экрана.
  workshop: В MemeNgin вы можете поделиться своим мемом через мастерскую Steam. Проекты, которыми здесь делятся, могут помочь другим напечатать мемы с пользовательским текстом или цветами или получить идеи для новых мемов.
  startup_menu: Нажмите на меню в левом верхнем углу, чтобы получить доступ к учебникам, вашей работе и функции поиска в мастерской Steam. *MemeNgin находится в стадии разработки, поэтому, пожалуйста, поймите, что в неожиданных ситуациях могут возникать ошибки.
  dont_show_again: Не показывать это диалоговое окно при запуске.

tutorials:
  intro: Приятно познакомиться со всеми вами! Спасибо, что пользуетесь MemeNgin. В этом руководстве вы изучите основные возможности MemeNgin.
  startup_menu: Стартовое меню активируется нажатием кнопки меню в верхней левой части экрана. Здесь вы найдете меню, в котором можно перемещаться по недавним работам и учебникам программы, а также по чужим работам, выложенным в Мастерской Steam.
  app_bar: Из этого меню в верхней части экрана можно открывать, сохранять, а также отменять и восстанавливать общие функции движка.
  node_library: Меню библиотеки узлов находится в левой части экрана и содержит основные функции MemeNgin.
  node_shorcut: Если в редакторе нажать клавишу пробела, можно вызвать контекстное меню с той же функцией, что и библиотека узлов.
  editor: В редакторе вы можете организовать свою работу на основе узлов. Он состоит из Inputs, Outputs и узлов, над которыми вы будете работать.
  inputs: Входные узлы - это связки, которые могут содержать разные узлы и узлы изображений, так же вы можете выбирать и группировать элементы, которые вносят существенные изменения в вашу работу. При совместном использовании этих узлов в будущем, они разработаны таким образом, что вы можете настроить свою работу, просто изменяя эти значения в режиме предварительного просмотра, не открывая редактор.
  output: Output узел - это узел, в котором отображаются результаты проекта. Он крупнее других узлов, поэтому его легко распознать. При сохранении проекта (*.mmng) изображение результата этого узла сохраняется в виде иллюстрации. Когда вы в будущем будете передавать свою работу в steam workshop, значение Input этого узла должен быть подключен.
  preview: Меню предварительного просмотра находится в верхней части правой стороны экрана для предварительного просмотра изображения выходного узла. Вы можете сразу увидеть, как изменения, происходящие во время работы с узлом, отражаются в конечном результате. Вы можете сохранить свою работу в виде изображения, масштабировать его, чтобы подогнать под размер изображения.
  properties: Свойство - это меню в правом нижнем углу экрана, в котором вы можете изменить значение свойства каждого узла. Для большинства свойств вы можете решить, показывать их или нет, установив флажок слева от значения свойства Вкл/Выкл.
  library:
    shape: Узел формы - это набор узлов, которые преобразуют форму изображения. Он получает одно входное изображение и выводит его в виде преобразованного изображения. Сюда входят преобразование изображения (и кадрирование), изменение размера холста и т.д.
    color: Узел цвета - это набор узлов, которые изменяют цвет изображения в соответствии с правилами. Существуют такие распространенные варианты изменения цвета, как яркость-контраст, сдвиг оттенка и LUT.
    composite: Узел композиции принимает один узел переднего плана и узел фона в качестве входных значений и выполняет композицию. Узел смешивания позволяет выбирать из множества правил композиции изображений. При выборе большинства композиционных узлов активируется соответствующий виджет преобразования. С помощью виджета можно разместить изображения переднего плана.
    create: Узел создания может создавать различные узлы, такие как изображение, текст, клетчатый узор и т.д. Узлы, созданные здесь, могут использоваться в качестве Input значений для узлов формы и цвета, упомянутых ранее. Узлы, которые могут быть использованы в производственных целях, такие как узел QR-кода, также будут добавлены в будущем.
    logic: Логический узел - это набор узлов, которые используются в качестве Input значений других узлов, таких как узлы переменных, или узлы, которые решают логические задачи, такие как обнаружение и стилизация, и узлы, которые помогают логически оформлять задачи, такие как input, output и copy. а также узлы, которые могут логически программировать работу, такие как Арифметические операции, Операции управления и т.д., будут добавлены в будущем. Пожалуйста, обратите внимание, что некоторые узлы здесь неполные и являются экспериментальной стадией.
  property:
    node: Узел свойств - это узел, который содержит значения, такие как строки, целые числа, десятичные числа, векторы и цвета, и позволяет изменять это значение за пределами узла, соединяя его с открытым значением свойства другого узла.
    expose: Большинство свойств можно раскрыть, нажав на флажок слева от значения свойства, при этом раскрытые свойства появляются в виде гнезда в левой части узла, а значение результата узла свойства можно подключить.
    propagate: Узлы свойств могут быть непрерывно соединены в цепочку, и значения передаются от левого узла к правому.
  image:
    rule_one: При создании изображения сохраняется исходное изображение или размер изображения Input узла, если нет особых условий. При создании нового узла изображения (Create) размер изображения фиксируется на 1024 x 1024.
    rule_two: Для изменения размера изображения существуют узлы Resize и Transform2D. Размер изображения, измененный этим узлом, останется неизменным для последующих узлов.
    rule_three: В случае составного узла, который принимает два или более изображений в качестве входных значений, размер фонового изображения изменяется на размер нового узла.
  navigation:
    zoom: С помощью колесика мыши можно увеличивать/уменьшать масштаб рабочей области.
    zoom_selected: Когда узлы выбраны, нажмите кнопку 'F' или кнопку zoom в верхней части экрана, чтобы увеличить выбранный элемент. Выбор узла Input или Output в библиотеке также вызывает аналогичный эффект масштабирования узла ввода и вывода вместо его создания.
    panning: Вы можете перемещаться по области редактора, перетаскивая правую кнопку мыши или кнопку-колесико.
    preview: Вы также можете просмотреть предварительный просмотр так же, как и в редакторе.
  logics:
    string: Strings можно вводить в текстовые узлы, а также использовать в качестве входных значений, например, QR-кодов.
    float: Float - это десятичные числа, которые отображаются как числа в диапазоне от 0 до 1 и используются для различных значений свойств. Вы можете настроить диапазон значений с помощью узла MapFloat.
    integer: Integer - это число от 0 до 100, в основном используется для узлов, которые принимают на вход подсчеты.
    corelation: Одно значение свойства, в зависимости от конструкции узла, может быть углом поворота или яркостью изображения, и может влиять на несколько узлов одновременно.
